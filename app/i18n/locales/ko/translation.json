{
  "title": "안뇽 ㅎㅎ",
  "title_badge": "Concept 이해하기",
  "description": "나는 S대에 재학하는 학생입니다. 용돈이 부족해서 과외 플랫폼을 통해 과외를 구하기로 했습니다.",
  "mission1": "나는 학교를 상대로 재학 증명서를 받아내야 합니다.",
  "mission2": "받은 재학 증명서를 과외 플랫폼에 제출해야 합니다.",
  "viewCode": "코드 보기",
  "school": "학교",
  "credentailDesc1": "우리는 학교측에 대학 증명서를 발급해달라 요청했어요. 이제 학교(Issuer) 는 증명서를 발급할거예요. 학교측은 [ 'name', 'studentId', 'department'] 에 대해 선택적으로 공개(Selective Disclosure)할 수 있게 허락해줬다고 가정할게요.",
  "credentailDesc2": "issue 함수를 실행시키면 VC가 발급이 돼요. 그렇다면 발급하기 버튼을 누를때마다 계속해서 토큰이 변경되는 이유는 무엇일까요? 바로 내부적으로 salt 값을 넣고 hash 함수를 돌려 발급할때마다 새로운  값을 생성하기 때문입니다.",
  "credentailDesc3": "토큰을 받아 sd-jwt와 jwt 디버깅 사이트에서 decode 해보았어요. 이처럼 우리가 흔히 알고있는 encode 함수를 돌리면 오른쪽처럼 프레임이 숨겨진 것을 볼 수 있어요. 왼쪽 encode 상태를 보면 원본 객체가 그대로 드러나고 있어요. 중요한 것은 우리는 숨길 수 있다고 명시한 것 뿐이지, 완전히 숨긴 것은 아니에요.",
  "link1": "sd-jwt 디버깅 사이트를 통해 decode 한 값",
  "link2": "jwt 디버깅 사이트를 통해 decode 한 값",
  "issue": "증명서를 발급해주세요.",
  "getClaims": "토큰 풀어보기 (get Claims)",
  "complete": "학교는 방금 재학 증명서를 발급을 완료했어요.",
  "thisIsVc": "이것이 바로 VC입니다.",
  "letsIssue": "발급하기 (issue)",
  "chapter1": "재학 증명서 발급해보기",
  "me": "👩‍💻 나",
  "plzIssueCredential": "증명서를 발급해주세요.",
  "disclosure": "필요한 정보만 드러내기",
  "presentDesc1": "학교측에서 재학증명서(VC) 를 발급해줬어요! 하지만 공개하고 싶지 않은 정보들이 있어요. VC에 공개된 정보 중 공개하고 싶은 것만 내가 스스로 선택해서 과외 플랫폼에 제출할래요. VC를 이용해서 우리는 이제 VP를 만들거예요. 생각해보니 이름(name)은 공개해도 될 것 같아요. 다른 정보는 여전히 공개하고 싶지 않아요.",
  "present": "발급하기(present)",
  "presentDesc2": "present 함수를 실행시키면 VC 기반으로 VP가 발급 돼요. present 함수를 실행시킬때 공개히고 싶은 정보를 내가 직접 정했어요. 토큰을 풀어볼까요?",
  "presentDesc3": "present 함수를 사용해 공개하고 싶은 정보만을 조합해서 증명서를 만들었어요! 이걸 VP라고 할게요. 이제 과외 플랫폼에게 제출할 일만 남았어요",
  "platform": "📲 과외 플랫폼",
  "provingYoutCredentials": "자격증 정보 입증하기",
  "verify": "입증하기 (verify)",
  "verifyComplete": "입증완료",
  "verifyDesc1": "입증이 완료 되었어요! 플랫폼 측에서는 필요로 하는 요소(requiredClaims)을 넣고 조작된 토큰인지 아닌지를 검증해요. 모든 스텝을 완료했습니다. 축하합니다!",
  "verifyDesc2": "VP를 만들어서 과외플랫폼에 제출했어요. 이제 플랫폼은 이 증명서를 입증해야 해요. 서명이 변경되거나 VP가 조작된 것이라면 분명 문제가 생기겠죠. 과외 플랫폼은 이제 VP를 인증할거예요."
}
